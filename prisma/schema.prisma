generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
}

enum CropType {
  SOYBEANS
  CORN
  COTTON
  COFFEE
  SUGARCANE
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  role UserRole @default(ADMIN)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  notifications Notification[]

  @@map("users")
}

model Producer {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  document String @unique

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  farms Farm[]
  crops Crop[]

  @@map("producers")
}

model Farm {
  ownerId String @map("producer_id")

  id    String @id @default(uuid())
  name  String @map("farm_name")
  city  String
  state String

  farmArea         String @map("farm_area")
  vegetationArea   String @map("vegetation_area")
  agriculturalArea String @map("agricultural_area")

  crops Crop[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  owner Producer @relation(fields: [ownerId], references: [id])

  @@map("farms")
}

model Crop {
  ownerId     String   @map("owner_id")
  landId      String   @map("farm_id")
  id          String   @id @default(uuid())
  type        CropType
  description String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  land  Farm     @relation(fields: [landId], references: [id], onDelete: Cascade)
  owner Producer @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@map("crops")
}

model Notification {
  recipientId String    @map("recipient_id")
  id          String    @id @default(uuid())
  title       String
  content     String
  readAt      DateTime? @map("read_at")

  createdAt DateTime @default(now()) @map("created_at")

  recipient User @relation(fields: [recipientId], references: [id])

  @@index([recipientId, readAt])
  @@map("notifications")
}
